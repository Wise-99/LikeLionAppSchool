
public class MainClass {
	public static void main(String[] args) {
		// 객체 생성
		TestClass1 t1 = new TestClass1();

		// 메서드를 호출한다.
		t1.testMethod1();
		t1.testMethod2();
		
		TestClass2 t2 = new TestClass2();
		
		t2.testMethod3();
		t2.testMethod4();
		
		t1.testMethod5();
	}
}

class TestClass1 {
	// 메서드
	public void testMethod1() {
		System.out.println("TestClass1의 testMethod1 입니다.");
	}

	public void testMethod2() {
		System.out.println("TestClass1의 testMethod2 입니다.");
	}
	
	// 중간에 return이 있는 메서드
    // return : 메서드는 모든 코드가 수행이 완료되면 메서드를 호출하는 쪽으로 되돌아 간다.
    // 그런데 메서드의 코드가 더 남아 있다고 하더라도 메서드의 수행을
    // 중단하고 호출한 쪽으로 돌아가고자 한다면 return 키워드를 사용한다.
    // 메서드 내부의 코드가 실행되는 안되는 상황인 경우 메서드의 수행을 중단시키기 위해 사용한다.
	public void testMethod5() {
        for(int i = 0 ; i < 10 ; i++) {
            System.out.println(i);
            if(i > 5) {
                return;
            }
            System.out.println(i);
        }
    }
}

class TestClass2 {
	// 메서드
	public void testMethod3() {
		System.out.println("TestClass2의 testMethod3 입니다.");
	}

	public void testMethod4() {
		System.out.println("TestClass2의 testMethod4 입니다.");
	}
}